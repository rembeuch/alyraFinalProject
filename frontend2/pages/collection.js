import Head from 'next/head'
import Image from 'next/image'
import Layout from '@/components/Layout/Layout'
import { useAccount, useSigner, useProvider } from 'wagmi'
import { Text, Flex, Button } from '@chakra-ui/react'
import {
  Alert,
  AlertIcon,
  AlertTitle,
  AlertDescription,
} from '@chakra-ui/react'
import { useEffect, useState } from 'react'
import { ethers } from 'ethers'
import { contractAddress, abi } from "../public/constants"
import Link from 'next/link';


export default function Collection() {

  const [nftList, setNftList] = useState([]);

  const { address, isConnected } = useAccount()
  const provider = useProvider()
  const { data: signer } = useSigner()

  async function fetchNfts() {
    if (isConnected) {
      const contract = new ethers.Contract(contractAddress, abi, signer)
      const nfts = await contract.getMyNFTs();

      setNftList(nfts);
    }
  }

  useEffect(() => {
    fetchNfts();
  }, [address, signer, nftList]);

  async function setForSale(id) {
    if (isConnected) {
      const contract = new ethers.Contract(contractAddress, abi, signer)
      await contract.setForSale(parseInt(id), 1);
    }
  }

  async function unSale(id) {
    if (isConnected) {
      const contract = new ethers.Contract(contractAddress, abi, signer)
      await contract.unSale(parseInt(id));
    }
  }


  return (
    <>
      <Head>
        <title>Punk Hazard Land : Collection</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {isConnected ? (
          <div className="App">
            <h1>My NFTs</h1>
            {nftList.map((nft) => (
              <div >
                {/* <img src={nft.uri} alt="nft" /> */}
                <p>Token location: {nft[0]}</p>
                <p>Token for Sale: {nft[1].toString()}
                  {nft[1] == false ? (
                    <Button onClick={() => setForSale(nft[4])}>Set ForSale</Button>) :
                    (<Button onClick={() => unSale(nft[4])}>Set UnSale</Button>)}
                </p>
                <p>Token Price: {ethers.utils.formatEther(nft[2].toString())} eth</p>
              </div>
            ))}
          </div>
        ) : (
          <Alert status='warning' width="50%">
            <AlertIcon />
            Please, connect your Wallet!
          </Alert>
        )}
      </Layout>
    </>
  )
}
